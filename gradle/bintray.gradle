/*
 * Copyright 2017 softcake.org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.jfrog.bintray'

bintrayUpload {
    onlyIf {
        project.publishArtifacts == true
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    dryRun = isSnapshot
    publish = false
    publications = ['nebula']

    pkg {
        //repo = project.bintrayRepo
        repo = rootProject.name
        //name = rootProject.name + "." + project.name
        name = project.name
        userOrg = project.bintrayUserOrg
        desc = description
        labels = ['softcake', 'template', 'java', 'gradle']
        publicDownloadNumbers = true
        licenses = ['Apache-2.0']
        //noinspection GroovyAssignabilityCheck
        version {
            released = new Date()
            name = project.version.toString()
            vcsTag = project.version.toString()
            attributes = ['softcake': [project.group, project.name].join(':')]

            gpg {
                sign = true
            }

            mavenCentralSync {
                sync = false
                def ossUser = System.getenv("SONATYPE_USERNAME") ?:
                        project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
                def ossPass = System.getenv("SONATYPE_PASSWORD") ?:
                        project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
                user = ossUser
                password = ossPass
                close = '1'

            }
        }
    }
}

